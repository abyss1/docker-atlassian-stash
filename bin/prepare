#!/usr/bin/env bash

# Usage: bin/prepare [VERSION]
#
# Prepares the current directory according to the given Atlassian Stash
# VERSION. If no VERSION information is specified the latest version is
# retrieved from the Atlassian Stash download feed.

if [[ "x${1}" == "x" && "$(git rev-parse --abbrev-ref HEAD)" != "master" ]]; then
	echo "Not master branch and therefore nothing to prepare"
	exit 0
fi

echo "Obtaining Altassian Stash version information..."

# Obtain the currently latest version of Atlassian Stash version defined
# by the Dockerfile in this repository.
CURRENT_VERSION=$(sed -nr 's/ENV STASH_VERSION[[:space:]]*(.+)/\1/p' Dockerfile)

# Obtain the latest Atlassian Stash version by going to the JSON version
# feed information to get a JSONP formatted response, strip the output to
# retrieve the actual content and then get the version number from the first
# entry.
VERSION=${1:-"$(curl -Ls 'https://my.atlassian.com/download/feeds/current/stash.json' | sed 's/downloads(\(.*\))/\1/g' | jq -r '.[0].version')"}

# Outputs the version information
echo "Found versions:"
echo "  Current: ${CURRENT_VERSION}"
echo "  New:     ${VERSION}"
echo ""

echo "Preparing branch for version new Atlassian Stash version"

# Edit the Dockerfile by changing the current version to the new obtained
# version from the Atlassian Stash version feed.
sed --in-place \
    --expression "s/ENV STASH_VERSION  ${CURRENT_VERSION}/ENV STASH_VERSION  ${VERSION}/g" \
    Dockerfile

# Edit the `README.md` by changing the announced version in the content
sed --in-place \
		--expression "s/${CURRENT_VERSION}/${VERSION}/g" \
		README.md

echo "Ready for acceptance testing"
